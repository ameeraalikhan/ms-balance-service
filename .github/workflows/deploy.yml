name: CI/CD - Deploy Balance Service to EKS


on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  CLUSTER_NAME: ameera-cluster
  ECR_REGISTRY: 071493677521.dkr.ecr.ap-south-1.amazonaws.com
  ECR_REPOSITORY: balance-service

jobs:
  build-and-deploy:
    name: Build, Push to ECR & Deploy to EKS
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v3

      - name: ☕ Set up Java 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: 🧪 Build Spring Boot App
        run: mvn clean package --file pom.xml

      - name: 🔐 Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: 🔎 Who am I? (Check STS Identity)
        run: aws sts get-caller-identity

      - name: 🔑 Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | \
          docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: 🐳 Build Docker Image
        run: |
          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: 📦 Push Docker Image to ECR
        run: |
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

      - name: ⚙️ Update kubeconfig for EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $CLUSTER_NAME

      - name: 🔍 Test EKS Access (kubectl get nodes)
        run: kubectl get nodes

      - name: 🚀 Deploy to EKS and Scale Up
        run: |
          kubectl apply -f balance-service-full.yaml
          kubectl scale deployment balance-service --replicas=1
